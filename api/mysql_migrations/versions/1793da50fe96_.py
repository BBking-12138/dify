"""empty message

Revision ID: 1793da50fe96
Revises: 
Create Date: 2024-09-12 01:54:40.929548

"""
from alembic import op
import sqlalchemy as sa

import models as models

# revision identifiers, used by Alembic.
revision = '1793da50fe96'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('data_source_oauth_bindings',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('access_token', sa.String(length=255), nullable=False),
    sa.Column('provider', sa.String(length=255), nullable=False),
    sa.Column('source_info', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('disabled', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='source_binding_pkey')
    )
    with op.batch_alter_table('data_source_oauth_bindings', schema=None) as batch_op:
        batch_op.create_index('source_binding_tenant_id_idx', ['tenant_id'], unique=False)
        # batch_op.create_index('source_info_idx', ['source_info'], unique=False, postgresql_using='gin')

    op.create_table('dataset_collection_bindings',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('provider_name', sa.String(length=40), nullable=False),
    sa.Column('model_name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=40), nullable=False),
    sa.Column('collection_name', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='dataset_collection_bindings_pkey')
    )
    with op.batch_alter_table('dataset_collection_bindings', schema=None) as batch_op:
        batch_op.create_index('provider_model_name_idx', ['provider_name', 'model_name'], unique=False)

    op.create_table('dataset_keyword_tables',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('dataset_id', models.types.StringUUID(), nullable=False),
    sa.Column('keyword_table', sa.Text(), nullable=False),
    sa.Column('data_source_type', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id', name='dataset_keyword_table_pkey'),
    sa.UniqueConstraint('dataset_id', name=op.f('dataset_keyword_tables_dataset_id_key'))
    )
    with op.batch_alter_table('dataset_keyword_tables', schema=None) as batch_op:
        batch_op.create_index('dataset_keyword_table_dataset_id_idx', ['dataset_id'], unique=False)

    op.create_table('dataset_permissions',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('dataset_id', models.types.StringUUID(), nullable=False),
    sa.Column('account_id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('has_permission', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='dataset_permission_pkey')
    )
    with op.batch_alter_table('dataset_permissions', schema=None) as batch_op:
        batch_op.create_index('idx_dataset_permissions_account_id', ['account_id'], unique=False)
        batch_op.create_index('idx_dataset_permissions_dataset_id', ['dataset_id'], unique=False)
        batch_op.create_index('idx_dataset_permissions_tenant_id', ['tenant_id'], unique=False)

    op.create_table('dataset_process_rules',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('dataset_id', models.types.StringUUID(), nullable=False),
    sa.Column('mode', sa.String(length=255), nullable=False),
    sa.Column('rules', sa.Text(), nullable=True),
    sa.Column('created_by', models.types.StringUUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='dataset_process_rule_pkey')
    )
    with op.batch_alter_table('dataset_process_rules', schema=None) as batch_op:
        batch_op.create_index('dataset_process_rule_dataset_id_idx', ['dataset_id'], unique=False)

    op.create_table('dataset_queries',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('dataset_id', models.types.StringUUID(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('source', sa.String(length=255), nullable=False),
    sa.Column('source_app_id', models.types.StringUUID(), nullable=True),
    sa.Column('created_by_role', sa.String(length=255), nullable=False),
    sa.Column('created_by', models.types.StringUUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='dataset_query_pkey')
    )
    with op.batch_alter_table('dataset_queries', schema=None) as batch_op:
        batch_op.create_index('dataset_query_dataset_id_idx', ['dataset_id'], unique=False)

    op.create_table('dataset_retriever_resources',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('message_id', models.types.StringUUID(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('dataset_id', models.types.StringUUID(), nullable=False),
    sa.Column('dataset_name', sa.Text(), nullable=False),
    sa.Column('document_id', models.types.StringUUID(), nullable=False),
    sa.Column('document_name', sa.Text(), nullable=False),
    sa.Column('data_source_type', sa.Text(), nullable=False),
    sa.Column('segment_id', models.types.StringUUID(), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('hit_count', sa.Integer(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('segment_position', sa.Integer(), nullable=True),
    sa.Column('index_node_hash', sa.Text(), nullable=True),
    sa.Column('retriever_from', sa.Text(), nullable=False),
    sa.Column('created_by', models.types.StringUUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='dataset_retriever_resource_pkey')
    )
    with op.batch_alter_table('dataset_retriever_resources', schema=None) as batch_op:
        batch_op.create_index('dataset_retriever_resource_message_id_idx', ['message_id'], unique=False)

    op.create_table('datasets',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('provider', sa.String(length=255), nullable=False),
    sa.Column('permission', sa.String(length=255), nullable=False),
    sa.Column('data_source_type', sa.String(length=255), nullable=True),
    sa.Column('indexing_technique', sa.String(length=255), nullable=True),
    sa.Column('index_struct', sa.Text(), nullable=True),
    sa.Column('created_by', models.types.StringUUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_by', models.types.StringUUID(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('embedding_model', sa.String(length=255), nullable=True),
    sa.Column('embedding_model_provider', sa.String(length=255), nullable=True),
    sa.Column('collection_binding_id', models.types.StringUUID(), nullable=True),
    sa.Column('retrieval_model', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='dataset_pkey')
    )
    with op.batch_alter_table('datasets', schema=None) as batch_op:
        batch_op.create_index('dataset_tenant_idx', ['tenant_id'], unique=False)
        # batch_op.create_index('retrieval_model_idx', ['retrieval_model'], unique=False, postgresql_using='gin')

    op.create_table('dify_setups',
    sa.Column('version', sa.String(length=255), nullable=False),
    sa.Column('setup_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('version', name='dify_setup_pkey')
    )
    op.create_table('document_segments',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('dataset_id', models.types.StringUUID(), nullable=False),
    sa.Column('document_id', models.types.StringUUID(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=False),
    sa.Column('tokens', sa.Integer(), nullable=False),
    sa.Column('keywords', sa.JSON(), nullable=True),
    sa.Column('index_node_id', sa.String(length=255), nullable=True),
    sa.Column('index_node_hash', sa.String(length=255), nullable=True),
    sa.Column('hit_count', sa.Integer(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('disabled_at', sa.DateTime(), nullable=True),
    sa.Column('disabled_by', models.types.StringUUID(), nullable=True),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.Column('created_by', models.types.StringUUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_by', models.types.StringUUID(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('indexing_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('error', sa.Text(), nullable=True),
    sa.Column('stopped_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='document_segment_pkey')
    )
    with op.batch_alter_table('document_segments', schema=None) as batch_op:
        batch_op.create_index('document_segment_dataset_id_idx', ['dataset_id'], unique=False)
        batch_op.create_index('document_segment_dataset_node_idx', ['dataset_id', 'index_node_id'], unique=False)
        batch_op.create_index('document_segment_document_id_idx', ['document_id'], unique=False)
        batch_op.create_index('document_segment_tenant_dataset_idx', ['dataset_id', 'tenant_id'], unique=False)
        batch_op.create_index('document_segment_tenant_document_idx', ['document_id', 'tenant_id'], unique=False)
        batch_op.create_index('document_segment_tenant_idx', ['tenant_id'], unique=False)

    op.create_table('documents',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('dataset_id', models.types.StringUUID(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('data_source_type', sa.String(length=255), nullable=False),
    sa.Column('data_source_info', sa.Text(), nullable=True),
    sa.Column('dataset_process_rule_id', models.types.StringUUID(), nullable=True),
    sa.Column('batch', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_from', sa.String(length=255), nullable=False),
    sa.Column('created_by', models.types.StringUUID(), nullable=False),
    sa.Column('created_api_request_id', models.types.StringUUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('processing_started_at', sa.DateTime(), nullable=True),
    sa.Column('file_id', sa.Text(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('parsing_completed_at', sa.DateTime(), nullable=True),
    sa.Column('cleaning_completed_at', sa.DateTime(), nullable=True),
    sa.Column('splitting_completed_at', sa.DateTime(), nullable=True),
    sa.Column('tokens', sa.Integer(), nullable=True),
    sa.Column('indexing_latency', sa.Float(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('is_paused', sa.Boolean(), nullable=True),
    sa.Column('paused_by', models.types.StringUUID(), nullable=True),
    sa.Column('paused_at', sa.DateTime(), nullable=True),
    sa.Column('error', sa.Text(), nullable=True),
    sa.Column('stopped_at', sa.DateTime(), nullable=True),
    sa.Column('indexing_status', sa.String(length=255), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('disabled_at', sa.DateTime(), nullable=True),
    sa.Column('disabled_by', models.types.StringUUID(), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=False),
    sa.Column('archived_reason', sa.String(length=255), nullable=True),
    sa.Column('archived_by', models.types.StringUUID(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('doc_type', sa.String(length=40), nullable=True),
    sa.Column('doc_metadata', sa.JSON(), nullable=True),
    sa.Column('doc_form', sa.String(length=255), nullable=False),
    sa.Column('doc_language', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name='document_pkey')
    )
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.create_index('document_dataset_id_idx', ['dataset_id'], unique=False)
        batch_op.create_index('document_is_paused_idx', ['is_paused'], unique=False)
        batch_op.create_index('document_tenant_idx', ['tenant_id'], unique=False)

    op.create_table('embeddings',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('model_name', sa.String(length=255), nullable=False),
    sa.Column('hash', sa.String(length=64), nullable=False),
    sa.Column('embedding', sa.LargeBinary(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('provider_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id', name='embedding_pkey'),
    sa.UniqueConstraint('model_name', 'hash', 'provider_name', name='embedding_hash_idx')
    )
    with op.batch_alter_table('embeddings', schema=None) as batch_op:
        batch_op.create_index('created_at_idx', ['created_at'], unique=False)

    op.create_table('end_users',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=True),
    sa.Column('type', sa.String(length=255), nullable=False),
    sa.Column('external_user_id', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('is_anonymous', sa.Boolean(), nullable=False),
    sa.Column('session_id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='end_user_pkey')
    )
    with op.batch_alter_table('end_users', schema=None) as batch_op:
        batch_op.create_index('end_user_session_id_idx', ['session_id', 'type'], unique=False)
        batch_op.create_index('end_user_tenant_session_id_idx', ['tenant_id', 'session_id', 'type'], unique=False)

    op.create_table('installed_apps',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('app_owner_tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('is_pinned', sa.Boolean(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='installed_app_pkey'),
    sa.UniqueConstraint('tenant_id', 'app_id', name='unique_tenant_app')
    )
    with op.batch_alter_table('installed_apps', schema=None) as batch_op:
        batch_op.create_index('installed_app_app_id_idx', ['app_id'], unique=False)
        batch_op.create_index('installed_app_tenant_id_idx', ['tenant_id'], unique=False)

    op.create_table('invitation_codes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch', sa.String(length=255), nullable=False),
    sa.Column('code', sa.String(length=32), nullable=False),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('used_at', sa.DateTime(), nullable=True),
    sa.Column('used_by_tenant_id', models.types.StringUUID(), nullable=True),
    sa.Column('used_by_account_id', models.types.StringUUID(), nullable=True),
    sa.Column('deprecated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='invitation_code_pkey')
    )
    with op.batch_alter_table('invitation_codes', schema=None) as batch_op:
        batch_op.create_index('invitation_codes_batch_idx', ['batch'], unique=False)
        batch_op.create_index('invitation_codes_code_idx', ['code', 'status'], unique=False)

    op.create_table('load_balancing_model_configs',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('provider_name', sa.String(length=255), nullable=False),
    sa.Column('model_name', sa.String(length=255), nullable=False),
    sa.Column('model_type', sa.String(length=40), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('encrypted_config', sa.Text(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='load_balancing_model_config_pkey')
    )
    with op.batch_alter_table('load_balancing_model_configs', schema=None) as batch_op:
        batch_op.create_index('load_balancing_model_config_tenant_provider_model_idx', ['tenant_id', 'provider_name', 'model_type'], unique=False)

    op.create_table('message_agent_thoughts',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('message_id', models.types.StringUUID(), nullable=False),
    sa.Column('message_chain_id', models.types.StringUUID(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('thought', sa.Text(), nullable=True),
    sa.Column('tool', sa.Text(), nullable=True),
    sa.Column('tool_labels_str', sa.Text(), server_default=sa.text('{}'), nullable=False),
    sa.Column('tool_meta_str', sa.Text(), server_default=sa.text('{}'), nullable=False),
    sa.Column('tool_input', sa.Text(), nullable=True),
    sa.Column('observation', sa.Text(), nullable=True),
    sa.Column('tool_process_data', sa.Text(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('message_token', sa.Integer(), nullable=True),
    sa.Column('message_unit_price', sa.Numeric(), nullable=True),
    sa.Column('message_price_unit', sa.Numeric(precision=10, scale=7), server_default=sa.text('0.001'), nullable=False),
    sa.Column('message_files', sa.Text(), nullable=True),
    sa.Column('answer', sa.Text(), nullable=True),
    sa.Column('answer_token', sa.Integer(), nullable=True),
    sa.Column('answer_unit_price', sa.Numeric(), nullable=True),
    sa.Column('answer_price_unit', sa.Numeric(precision=10, scale=7), server_default=sa.text('0.001'), nullable=False),
    sa.Column('tokens', sa.Integer(), nullable=True),
    sa.Column('total_price', sa.Numeric(), nullable=True),
    sa.Column('currency', sa.String(length=255), nullable=True),
    sa.Column('latency', sa.Float(), nullable=True),
    sa.Column('created_by_role', sa.String(length=255), nullable=False),
    sa.Column('created_by', models.types.StringUUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='message_agent_thought_pkey')
    )
    with op.batch_alter_table('message_agent_thoughts', schema=None) as batch_op:
        batch_op.create_index('message_agent_thought_message_chain_id_idx', ['message_chain_id'], unique=False)
        batch_op.create_index('message_agent_thought_message_id_idx', ['message_id'], unique=False)

    op.create_table('message_chains',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('message_id', models.types.StringUUID(), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=False),
    sa.Column('input', sa.Text(), nullable=True),
    sa.Column('output', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='message_chain_pkey')
    )
    with op.batch_alter_table('message_chains', schema=None) as batch_op:
        batch_op.create_index('message_chain_message_id_idx', ['message_id'], unique=False)

    op.create_table('message_feedbacks',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('conversation_id', models.types.StringUUID(), nullable=False),
    sa.Column('message_id', models.types.StringUUID(), nullable=False),
    sa.Column('rating', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('from_source', sa.String(length=255), nullable=False),
    sa.Column('from_end_user_id', models.types.StringUUID(), nullable=True),
    sa.Column('from_account_id', models.types.StringUUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='message_feedback_pkey')
    )
    with op.batch_alter_table('message_feedbacks', schema=None) as batch_op:
        batch_op.create_index('message_feedback_app_idx', ['app_id'], unique=False)
        batch_op.create_index('message_feedback_conversation_idx', ['conversation_id', 'from_source', 'rating'], unique=False)
        batch_op.create_index('message_feedback_message_idx', ['message_id', 'from_source'], unique=False)

    op.create_table('message_files',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('message_id', models.types.StringUUID(), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=False),
    sa.Column('transfer_method', sa.String(length=255), nullable=False),
    sa.Column('url', sa.Text(), nullable=True),
    sa.Column('belongs_to', sa.String(length=255), nullable=True),
    sa.Column('upload_file_id', models.types.StringUUID(), nullable=True),
    sa.Column('created_by_role', sa.String(length=255), nullable=False),
    sa.Column('created_by', models.types.StringUUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='message_file_pkey')
    )
    with op.batch_alter_table('message_files', schema=None) as batch_op:
        batch_op.create_index('message_file_created_by_idx', ['created_by'], unique=False)
        batch_op.create_index('message_file_message_idx', ['message_id'], unique=False)

    op.create_table('operation_logs',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('account_id', models.types.StringUUID(), nullable=False),
    sa.Column('action', sa.String(length=255), nullable=False),
    sa.Column('content', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('created_ip', sa.String(length=255), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='operation_log_pkey')
    )
    with op.batch_alter_table('operation_logs', schema=None) as batch_op:
        batch_op.create_index('operation_log_account_action_idx', ['tenant_id', 'account_id', 'action'], unique=False)

    op.create_table('pinned_conversations',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('conversation_id', models.types.StringUUID(), nullable=False),
    sa.Column('created_by_role', sa.String(length=255), nullable=False),
    sa.Column('created_by', models.types.StringUUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pinned_conversation_pkey')
    )
    with op.batch_alter_table('pinned_conversations', schema=None) as batch_op:
        batch_op.create_index('pinned_conversation_conversation_idx', ['app_id', 'conversation_id', 'created_by_role', 'created_by'], unique=False)

    op.create_table('provider_model_settings',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('provider_name', sa.String(length=255), nullable=False),
    sa.Column('model_name', sa.String(length=255), nullable=False),
    sa.Column('model_type', sa.String(length=40), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('load_balancing_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='provider_model_setting_pkey')
    )
    with op.batch_alter_table('provider_model_settings', schema=None) as batch_op:
        batch_op.create_index('provider_model_setting_tenant_provider_model_idx', ['tenant_id', 'provider_name', 'model_type'], unique=False)

    op.create_table('provider_models',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('provider_name', sa.String(length=255), nullable=False),
    sa.Column('model_name', sa.String(length=255), nullable=False),
    sa.Column('model_type', sa.String(length=40), nullable=False),
    sa.Column('encrypted_config', sa.Text(), nullable=True),
    sa.Column('is_valid', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='provider_model_pkey'),
    sa.UniqueConstraint('tenant_id', 'provider_name', 'model_name', 'model_type', name='unique_provider_model_name')
    )
    with op.batch_alter_table('provider_models', schema=None) as batch_op:
        batch_op.create_index('provider_model_tenant_id_provider_idx', ['tenant_id', 'provider_name'], unique=False)

    op.create_table('provider_orders',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('provider_name', sa.String(length=255), nullable=False),
    sa.Column('account_id', models.types.StringUUID(), nullable=False),
    sa.Column('payment_product_id', sa.String(length=191), nullable=False),
    sa.Column('payment_id', sa.String(length=191), nullable=True),
    sa.Column('transaction_id', sa.String(length=191), nullable=True),
    sa.Column('quantity', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.Column('currency', sa.String(length=40), nullable=True),
    sa.Column('total_amount', sa.Integer(), nullable=True),
    sa.Column('payment_status', sa.String(length=40), nullable=False),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('pay_failed_at', sa.DateTime(), nullable=True),
    sa.Column('refunded_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='provider_order_pkey')
    )
    with op.batch_alter_table('provider_orders', schema=None) as batch_op:
        batch_op.create_index('provider_order_tenant_provider_idx', ['tenant_id', 'provider_name'], unique=False)

    op.create_table('providers',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('provider_name', sa.String(length=255), nullable=False),
    sa.Column('provider_type', sa.String(length=40), nullable=False),
    sa.Column('encrypted_config', sa.Text(), nullable=True),
    sa.Column('is_valid', sa.Boolean(), nullable=False),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.Column('quota_type', sa.String(length=40), nullable=True),
    sa.Column('quota_limit', sa.BigInteger(), nullable=True),
    sa.Column('quota_used', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='provider_pkey'),
    sa.UniqueConstraint('tenant_id', 'provider_name', 'provider_type', 'quota_type', name='unique_provider_name_type_quota')
    )
    with op.batch_alter_table('providers', schema=None) as batch_op:
        batch_op.create_index('provider_tenant_id_provider_idx', ['tenant_id', 'provider_name'], unique=False)

    op.create_table('recommended_apps',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('description', sa.JSON(), nullable=False),
    sa.Column('copyright', sa.String(length=255), nullable=False),
    sa.Column('privacy_policy', sa.String(length=255), nullable=False),
    sa.Column('custom_disclaimer', sa.String(length=255), nullable=True),
    sa.Column('category', sa.String(length=255), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('is_listed', sa.Boolean(), nullable=False),
    sa.Column('install_count', sa.Integer(), nullable=False),
    sa.Column('language', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='recommended_app_pkey')
    )
    with op.batch_alter_table('recommended_apps', schema=None) as batch_op:
        batch_op.create_index('recommended_app_app_id_idx', ['app_id'], unique=False)
        batch_op.create_index('recommended_app_is_listed_idx', ['is_listed', 'language'], unique=False)

    op.create_table('saved_messages',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('message_id', models.types.StringUUID(), nullable=False),
    sa.Column('created_by_role', sa.String(length=255), nullable=False),
    sa.Column('created_by', models.types.StringUUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='saved_message_pkey')
    )
    with op.batch_alter_table('saved_messages', schema=None) as batch_op:
        batch_op.create_index('saved_message_message_idx', ['app_id', 'message_id', 'created_by_role', 'created_by'], unique=False)

    op.create_table('sites',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('icon_type', sa.String(length=255), nullable=True),
    sa.Column('icon', sa.String(length=255), nullable=True),
    sa.Column('icon_background', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('default_language', sa.String(length=255), nullable=False),
    sa.Column('chat_color_theme', sa.String(length=255), nullable=True),
    sa.Column('chat_color_theme_inverted', sa.Boolean(), nullable=False),
    sa.Column('copyright', sa.String(length=255), nullable=True),
    sa.Column('privacy_policy', sa.String(length=255), nullable=True),
    sa.Column('show_workflow_steps', sa.Boolean(), nullable=False),
    sa.Column('use_icon_as_answer_icon', sa.Boolean(), nullable=False),
    sa.Column('custom_disclaimer', sa.String(length=255), nullable=True),
    sa.Column('customize_domain', sa.String(length=255), nullable=True),
    sa.Column('customize_token_strategy', sa.String(length=255), nullable=False),
    sa.Column('prompt_public', sa.Boolean(), nullable=False),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.Column('created_by', models.types.StringUUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_by', models.types.StringUUID(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('code', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name='site_pkey')
    )
    with op.batch_alter_table('sites', schema=None) as batch_op:
        batch_op.create_index('site_app_id_idx', ['app_id'], unique=False)
        batch_op.create_index('site_code_idx', ['code', 'status'], unique=False)

    op.create_table('tag_bindings',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=True),
    sa.Column('tag_id', models.types.StringUUID(), nullable=True),
    sa.Column('target_id', models.types.StringUUID(), nullable=True),
    sa.Column('created_by', models.types.StringUUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='tag_binding_pkey')
    )
    with op.batch_alter_table('tag_bindings', schema=None) as batch_op:
        batch_op.create_index('tag_bind_tag_id_idx', ['tag_id'], unique=False)
        batch_op.create_index('tag_bind_target_id_idx', ['target_id'], unique=False)

    op.create_table('tags',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=True),
    sa.Column('type', sa.String(length=16), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_by', models.types.StringUUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='tag_pkey')
    )
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.create_index('tag_name_idx', ['name'], unique=False)
        batch_op.create_index('tag_type_idx', ['type'], unique=False)

    op.create_table('tenant_account_joins',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('account_id', models.types.StringUUID(), nullable=False),
    sa.Column('current', sa.Boolean(), nullable=False),
    sa.Column('role', sa.String(length=16), nullable=False),
    sa.Column('invited_by', models.types.StringUUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='tenant_account_join_pkey'),
    sa.UniqueConstraint('tenant_id', 'account_id', name='unique_tenant_account_join')
    )
    with op.batch_alter_table('tenant_account_joins', schema=None) as batch_op:
        batch_op.create_index('tenant_account_join_account_id_idx', ['account_id'], unique=False)
        batch_op.create_index('tenant_account_join_tenant_id_idx', ['tenant_id'], unique=False)

    op.create_table('tenant_default_models',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('provider_name', sa.String(length=255), nullable=False),
    sa.Column('model_name', sa.String(length=255), nullable=False),
    sa.Column('model_type', sa.String(length=40), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='tenant_default_model_pkey')
    )
    with op.batch_alter_table('tenant_default_models', schema=None) as batch_op:
        batch_op.create_index('tenant_default_model_tenant_id_provider_type_idx', ['tenant_id', 'provider_name', 'model_type'], unique=False)

    op.create_table('tenant_preferred_model_providers',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('provider_name', sa.String(length=255), nullable=False),
    sa.Column('preferred_provider_type', sa.String(length=40), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='tenant_preferred_model_provider_pkey')
    )
    with op.batch_alter_table('tenant_preferred_model_providers', schema=None) as batch_op:
        batch_op.create_index('tenant_preferred_model_provider_tenant_provider_idx', ['tenant_id', 'provider_name'], unique=False)

    op.create_table('tenants',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('encrypt_public_key', sa.Text(), nullable=True),
    sa.Column('plan', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.Column('custom_config', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='tenant_pkey')
    )
    op.create_table('tool_api_providers',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('icon', sa.String(length=255), nullable=False),
    sa.Column('schema', sa.Text(), nullable=False),
    sa.Column('schema_type_str', sa.String(length=40), nullable=False),
    sa.Column('user_id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('tools_str', sa.Text(), nullable=False),
    sa.Column('credentials_str', sa.Text(), nullable=False),
    sa.Column('privacy_policy', sa.String(length=255), nullable=True),
    sa.Column('custom_disclaimer', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='tool_api_provider_pkey'),
    sa.UniqueConstraint('name', 'tenant_id', name='unique_api_tool_provider')
    )
    op.create_table('tool_builtin_providers',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=True),
    sa.Column('user_id', models.types.StringUUID(), nullable=False),
    sa.Column('provider', sa.String(length=40), nullable=False),
    sa.Column('encrypted_credentials', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='tool_builtin_provider_pkey'),
    sa.UniqueConstraint('tenant_id', 'provider', name='unique_builtin_tool_provider')
    )
    op.create_table('tool_conversation_variables',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('user_id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('conversation_id', models.types.StringUUID(), nullable=False),
    sa.Column('variables_str', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='tool_conversation_variables_pkey')
    )
    with op.batch_alter_table('tool_conversation_variables', schema=None) as batch_op:
        batch_op.create_index('conversation_id_idx', ['conversation_id'], unique=False)
        batch_op.create_index('user_id_idx', ['user_id'], unique=False)

    op.create_table('tool_files',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('user_id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('conversation_id', models.types.StringUUID(), nullable=True),
    sa.Column('file_key', sa.String(length=255), nullable=False),
    sa.Column('mimetype', sa.String(length=255), nullable=False),
    sa.Column('original_url', sa.String(length=2048), nullable=True),
    sa.PrimaryKeyConstraint('id', name='tool_file_pkey')
    )
    with op.batch_alter_table('tool_files', schema=None) as batch_op:
        batch_op.create_index('tool_file_conversation_id_idx', ['conversation_id'], unique=False)

    op.create_table('tool_label_bindings',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tool_id', sa.String(length=64), nullable=False),
    sa.Column('tool_type', sa.String(length=40), nullable=False),
    sa.Column('label_name', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('id', name='tool_label_bind_pkey'),
    sa.UniqueConstraint('tool_id', 'label_name', name='unique_tool_label_bind')
    )
    op.create_table('tool_model_invokes',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('user_id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('provider', sa.String(length=40), nullable=False),
    sa.Column('tool_type', sa.String(length=40), nullable=False),
    sa.Column('tool_name', sa.String(length=40), nullable=False),
    sa.Column('model_parameters', sa.Text(), nullable=False),
    sa.Column('prompt_messages', sa.Text(), nullable=False),
    sa.Column('model_response', sa.Text(), nullable=False),
    sa.Column('prompt_tokens', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('answer_tokens', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('answer_unit_price', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('answer_price_unit', sa.Numeric(precision=10, scale=7), server_default=sa.text('0.001'), nullable=False),
    sa.Column('provider_response_latency', sa.Float(), server_default=sa.text('0'), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=10, scale=7), nullable=True),
    sa.Column('currency', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='tool_model_invoke_pkey')
    )
    op.create_table('tool_providers',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('tool_name', sa.String(length=40), nullable=False),
    sa.Column('encrypted_credentials', sa.Text(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='tool_provider_pkey'),
    sa.UniqueConstraint('tenant_id', 'tool_name', name='unique_tool_provider_tool_name')
    )
    op.create_table('tool_workflow_providers',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('label', sa.String(length=255), server_default='', nullable=False),
    sa.Column('icon', sa.String(length=255), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('version', sa.String(length=255), server_default='', nullable=False),
    sa.Column('user_id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('parameter_configuration', sa.Text(), server_default='[]', nullable=False),
    sa.Column('privacy_policy', sa.String(length=255), server_default='', nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='tool_workflow_provider_pkey'),
    sa.UniqueConstraint('name', 'tenant_id', name='unique_workflow_tool_provider'),
    sa.UniqueConstraint('tenant_id', 'app_id', name='unique_workflow_tool_provider_app_id')
    )
    op.create_table('trace_app_config',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('tracing_provider', sa.String(length=255), nullable=True),
    sa.Column('tracing_config', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name='tracing_app_config_pkey')
    )
    with op.batch_alter_table('trace_app_config', schema=None) as batch_op:
        batch_op.create_index('trace_app_config_app_id_idx', ['app_id'], unique=False)

    op.create_table('upload_files',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('storage_type', sa.String(length=255), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('extension', sa.String(length=255), nullable=False),
    sa.Column('mime_type', sa.String(length=255), nullable=True),
    sa.Column('created_by_role', sa.String(length=255), nullable=False),
    sa.Column('created_by', models.types.StringUUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=False),
    sa.Column('used_by', models.types.StringUUID(), nullable=True),
    sa.Column('used_at', sa.DateTime(), nullable=True),
    sa.Column('hash', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name='upload_file_pkey')
    )
    with op.batch_alter_table('upload_files', schema=None) as batch_op:
        batch_op.create_index('upload_file_tenant_idx', ['tenant_id'], unique=False)

    op.create_table('workflow_app_logs',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('workflow_id', models.types.StringUUID(), nullable=False),
    sa.Column('workflow_run_id', models.types.StringUUID(), nullable=False),
    sa.Column('created_from', sa.String(length=255), nullable=False),
    sa.Column('created_by_role', sa.String(length=255), nullable=False),
    sa.Column('created_by', models.types.StringUUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='workflow_app_log_pkey')
    )
    with op.batch_alter_table('workflow_app_logs', schema=None) as batch_op:
        batch_op.create_index('workflow_app_log_app_idx', ['tenant_id', 'app_id'], unique=False)

    op.create_table('workflow_conversation_variables',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('conversation_id', models.types.StringUUID(), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('data', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', 'conversation_id', name=op.f('workflow_conversation_variables_pkey'))
    )
    with op.batch_alter_table('workflow_conversation_variables', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('workflow_conversation_variables_app_id_idx'), ['app_id'], unique=False)
        batch_op.create_index(batch_op.f('workflow_conversation_variables_created_at_idx'), ['created_at'], unique=False)

    op.create_table('workflow_node_executions',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('workflow_id', models.types.StringUUID(), nullable=False),
    sa.Column('triggered_from', sa.String(length=255), nullable=False),
    sa.Column('workflow_run_id', models.types.StringUUID(), nullable=True),
    sa.Column('index', sa.Integer(), nullable=False),
    sa.Column('predecessor_node_id', sa.String(length=255), nullable=True),
    sa.Column('node_execution_id', sa.String(length=255), nullable=True),
    sa.Column('node_id', sa.String(length=255), nullable=False),
    sa.Column('node_type', sa.String(length=255), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('inputs', sa.Text(), nullable=True),
    sa.Column('process_data', sa.Text(), nullable=True),
    sa.Column('outputs', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.Column('error', sa.Text(), nullable=True),
    sa.Column('elapsed_time', sa.Float(), server_default=sa.text('0'), nullable=False),
    sa.Column('execution_metadata', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('created_by_role', sa.String(length=255), nullable=False),
    sa.Column('created_by', models.types.StringUUID(), nullable=False),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='workflow_node_execution_pkey')
    )
    with op.batch_alter_table('workflow_node_executions', schema=None) as batch_op:
        batch_op.create_index('workflow_node_execution_id_idx', ['tenant_id', 'app_id', 'workflow_id', 'triggered_from', 'node_execution_id'], unique=False)
        batch_op.create_index('workflow_node_execution_node_run_idx', ['tenant_id', 'app_id', 'workflow_id', 'triggered_from', 'node_id'], unique=False)
        batch_op.create_index('workflow_node_execution_workflow_run_idx', ['tenant_id', 'app_id', 'workflow_id', 'triggered_from', 'workflow_run_id'], unique=False)

    op.create_table('workflow_runs',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('sequence_number', sa.Integer(), nullable=False),
    sa.Column('workflow_id', models.types.StringUUID(), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=False),
    sa.Column('triggered_from', sa.String(length=255), nullable=False),
    sa.Column('version', sa.String(length=255), nullable=False),
    sa.Column('graph', sa.Text(), nullable=True),
    sa.Column('inputs', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.Column('outputs', sa.Text(), nullable=True),
    sa.Column('error', sa.Text(), nullable=True),
    sa.Column('elapsed_time', sa.Float(), server_default=sa.text('0'), nullable=False),
    sa.Column('total_tokens', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('total_steps', sa.Integer(), server_default=sa.text('0'), nullable=True),
    sa.Column('created_by_role', sa.String(length=255), nullable=False),
    sa.Column('created_by', models.types.StringUUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='workflow_run_pkey')
    )
    with op.batch_alter_table('workflow_runs', schema=None) as batch_op:
        batch_op.create_index('workflow_run_tenant_app_sequence_idx', ['tenant_id', 'app_id', 'sequence_number'], unique=False)
        batch_op.create_index('workflow_run_triggerd_from_idx', ['tenant_id', 'app_id', 'triggered_from'], unique=False)

    op.create_table('workflows',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=False),
    sa.Column('version', sa.String(length=255), nullable=False),
    sa.Column('graph', sa.Text(), nullable=True),
    sa.Column('features', sa.Text(), nullable=True),
    sa.Column('created_by', models.types.StringUUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_by', models.types.StringUUID(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('environment_variables', sa.Text(), server_default='{}', nullable=False),
    sa.Column('conversation_variables', sa.Text(), server_default='{}', nullable=False),
    sa.PrimaryKeyConstraint('id', name='workflow_pkey')
    )
    with op.batch_alter_table('workflows', schema=None) as batch_op:
        batch_op.create_index('workflow_version_idx', ['tenant_id', 'app_id', 'version'], unique=False)

    op.create_table('message_annotations',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('conversation_id', models.types.StringUUID(), nullable=True),
    sa.Column('message_id', models.types.StringUUID(), nullable=True),
    sa.Column('question', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('hit_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('account_id', models.types.StringUUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], name=op.f('message_annotations_conversation_id_fkey')),
    sa.PrimaryKeyConstraint('id', name='message_annotation_pkey')
    )
    with op.batch_alter_table('message_annotations', schema=None) as batch_op:
        batch_op.create_index('message_annotation_app_idx', ['app_id'], unique=False)
        batch_op.create_index('message_annotation_conversation_idx', ['conversation_id'], unique=False)
        batch_op.create_index('message_annotation_message_idx', ['message_id'], unique=False)

    op.create_table('messages',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('model_provider', sa.String(length=255), nullable=True),
    sa.Column('model_id', sa.String(length=255), nullable=True),
    sa.Column('override_model_configs', sa.Text(), nullable=True),
    sa.Column('conversation_id', models.types.StringUUID(), nullable=False),
    sa.Column('inputs', sa.JSON(), nullable=True),
    sa.Column('query', sa.Text(), nullable=False),
    sa.Column('message', sa.JSON(), nullable=False),
    sa.Column('message_tokens', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('message_unit_price', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('message_price_unit', sa.Numeric(precision=10, scale=7), server_default=sa.text('0.001'), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.Column('answer_tokens', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('answer_unit_price', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('answer_price_unit', sa.Numeric(precision=10, scale=7), server_default=sa.text('0.001'), nullable=False),
    sa.Column('provider_response_latency', sa.Float(), server_default=sa.text('0'), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=10, scale=7), nullable=True),
    sa.Column('currency', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.Column('error', sa.Text(), nullable=True),
    sa.Column('message_metadata', sa.Text(), nullable=True),
    sa.Column('invoke_from', sa.String(length=255), nullable=True),
    sa.Column('from_source', sa.String(length=255), nullable=False),
    sa.Column('from_end_user_id', models.types.StringUUID(), nullable=True),
    sa.Column('from_account_id', models.types.StringUUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('agent_based', sa.Boolean(), nullable=False),
    sa.Column('workflow_run_id', models.types.StringUUID(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], name=op.f('messages_conversation_id_fkey')),
    sa.PrimaryKeyConstraint('id', name='message_pkey')
    )
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.create_index('message_account_idx', ['app_id', 'from_source', 'from_account_id'], unique=False)
        batch_op.create_index('message_app_id_idx', ['app_id', 'created_at'], unique=False)
        batch_op.create_index('message_conversation_id_idx', ['conversation_id'], unique=False)
        batch_op.create_index('message_end_user_idx', ['app_id', 'from_source', 'from_end_user_id'], unique=False)
        batch_op.create_index('message_workflow_run_id_idx', ['conversation_id', 'workflow_run_id'], unique=False)

    op.create_table('tool_published_apps',
    sa.Column('id', models.types.StringUUID(), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('user_id', models.types.StringUUID(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('llm_description', sa.Text(), nullable=False),
    sa.Column('query_description', sa.Text(), nullable=False),
    sa.Column('query_name', sa.String(length=40), nullable=False),
    sa.Column('tool_name', sa.String(length=40), nullable=False),
    sa.Column('author', sa.String(length=40), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['app_id'], ['apps.id'], name=op.f('tool_published_apps_app_id_fkey')),
    sa.PrimaryKeyConstraint('id', name='published_app_tool_pkey'),
    sa.UniqueConstraint('app_id', 'user_id', name='unique_published_app_tool')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tool_published_apps')
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.drop_index('message_workflow_run_id_idx')
        batch_op.drop_index('message_end_user_idx')
        batch_op.drop_index('message_conversation_id_idx')
        batch_op.drop_index('message_app_id_idx')
        batch_op.drop_index('message_account_idx')

    op.drop_table('messages')
    with op.batch_alter_table('message_annotations', schema=None) as batch_op:
        batch_op.drop_index('message_annotation_message_idx')
        batch_op.drop_index('message_annotation_conversation_idx')
        batch_op.drop_index('message_annotation_app_idx')

    op.drop_table('message_annotations')
    with op.batch_alter_table('workflows', schema=None) as batch_op:
        batch_op.drop_index('workflow_version_idx')

    op.drop_table('workflows')
    with op.batch_alter_table('workflow_runs', schema=None) as batch_op:
        batch_op.drop_index('workflow_run_triggerd_from_idx')
        batch_op.drop_index('workflow_run_tenant_app_sequence_idx')

    op.drop_table('workflow_runs')
    with op.batch_alter_table('workflow_node_executions', schema=None) as batch_op:
        batch_op.drop_index('workflow_node_execution_workflow_run_idx')
        batch_op.drop_index('workflow_node_execution_node_run_idx')
        batch_op.drop_index('workflow_node_execution_id_idx')

    op.drop_table('workflow_node_executions')
    with op.batch_alter_table('workflow_conversation_variables', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('workflow_conversation_variables_created_at_idx'))
        batch_op.drop_index(batch_op.f('workflow_conversation_variables_app_id_idx'))

    op.drop_table('workflow_conversation_variables')
    with op.batch_alter_table('workflow_app_logs', schema=None) as batch_op:
        batch_op.drop_index('workflow_app_log_app_idx')

    op.drop_table('workflow_app_logs')
    with op.batch_alter_table('upload_files', schema=None) as batch_op:
        batch_op.drop_index('upload_file_tenant_idx')

    op.drop_table('upload_files')
    with op.batch_alter_table('trace_app_config', schema=None) as batch_op:
        batch_op.drop_index('trace_app_config_app_id_idx')

    op.drop_table('trace_app_config')
    op.drop_table('tool_workflow_providers')
    op.drop_table('tool_providers')
    op.drop_table('tool_model_invokes')
    op.drop_table('tool_label_bindings')
    with op.batch_alter_table('tool_files', schema=None) as batch_op:
        batch_op.drop_index('tool_file_conversation_id_idx')

    op.drop_table('tool_files')
    with op.batch_alter_table('tool_conversation_variables', schema=None) as batch_op:
        batch_op.drop_index('user_id_idx')
        batch_op.drop_index('conversation_id_idx')

    op.drop_table('tool_conversation_variables')
    op.drop_table('tool_builtin_providers')
    op.drop_table('tool_api_providers')
    op.drop_table('tenants')
    with op.batch_alter_table('tenant_preferred_model_providers', schema=None) as batch_op:
        batch_op.drop_index('tenant_preferred_model_provider_tenant_provider_idx')

    op.drop_table('tenant_preferred_model_providers')
    with op.batch_alter_table('tenant_default_models', schema=None) as batch_op:
        batch_op.drop_index('tenant_default_model_tenant_id_provider_type_idx')

    op.drop_table('tenant_default_models')
    with op.batch_alter_table('tenant_account_joins', schema=None) as batch_op:
        batch_op.drop_index('tenant_account_join_tenant_id_idx')
        batch_op.drop_index('tenant_account_join_account_id_idx')

    op.drop_table('tenant_account_joins')
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_index('tag_type_idx')
        batch_op.drop_index('tag_name_idx')

    op.drop_table('tags')
    with op.batch_alter_table('tag_bindings', schema=None) as batch_op:
        batch_op.drop_index('tag_bind_target_id_idx')
        batch_op.drop_index('tag_bind_tag_id_idx')

    op.drop_table('tag_bindings')
    with op.batch_alter_table('sites', schema=None) as batch_op:
        batch_op.drop_index('site_code_idx')
        batch_op.drop_index('site_app_id_idx')

    op.drop_table('sites')
    with op.batch_alter_table('saved_messages', schema=None) as batch_op:
        batch_op.drop_index('saved_message_message_idx')

    op.drop_table('saved_messages')
    with op.batch_alter_table('recommended_apps', schema=None) as batch_op:
        batch_op.drop_index('recommended_app_is_listed_idx')
        batch_op.drop_index('recommended_app_app_id_idx')

    op.drop_table('recommended_apps')
    with op.batch_alter_table('providers', schema=None) as batch_op:
        batch_op.drop_index('provider_tenant_id_provider_idx')

    op.drop_table('providers')
    with op.batch_alter_table('provider_orders', schema=None) as batch_op:
        batch_op.drop_index('provider_order_tenant_provider_idx')

    op.drop_table('provider_orders')
    with op.batch_alter_table('provider_models', schema=None) as batch_op:
        batch_op.drop_index('provider_model_tenant_id_provider_idx')

    op.drop_table('provider_models')
    with op.batch_alter_table('provider_model_settings', schema=None) as batch_op:
        batch_op.drop_index('provider_model_setting_tenant_provider_model_idx')

    op.drop_table('provider_model_settings')
    with op.batch_alter_table('pinned_conversations', schema=None) as batch_op:
        batch_op.drop_index('pinned_conversation_conversation_idx')

    op.drop_table('pinned_conversations')
    with op.batch_alter_table('operation_logs', schema=None) as batch_op:
        batch_op.drop_index('operation_log_account_action_idx')

    op.drop_table('operation_logs')
    with op.batch_alter_table('message_files', schema=None) as batch_op:
        batch_op.drop_index('message_file_message_idx')
        batch_op.drop_index('message_file_created_by_idx')

    op.drop_table('message_files')
    with op.batch_alter_table('message_feedbacks', schema=None) as batch_op:
        batch_op.drop_index('message_feedback_message_idx')
        batch_op.drop_index('message_feedback_conversation_idx')
        batch_op.drop_index('message_feedback_app_idx')

    op.drop_table('message_feedbacks')
    with op.batch_alter_table('message_chains', schema=None) as batch_op:
        batch_op.drop_index('message_chain_message_id_idx')

    op.drop_table('message_chains')
    with op.batch_alter_table('message_agent_thoughts', schema=None) as batch_op:
        batch_op.drop_index('message_agent_thought_message_id_idx')
        batch_op.drop_index('message_agent_thought_message_chain_id_idx')

    op.drop_table('message_agent_thoughts')
    with op.batch_alter_table('load_balancing_model_configs', schema=None) as batch_op:
        batch_op.drop_index('load_balancing_model_config_tenant_provider_model_idx')

    op.drop_table('load_balancing_model_configs')
    with op.batch_alter_table('invitation_codes', schema=None) as batch_op:
        batch_op.drop_index('invitation_codes_code_idx')
        batch_op.drop_index('invitation_codes_batch_idx')

    op.drop_table('invitation_codes')
    with op.batch_alter_table('installed_apps', schema=None) as batch_op:
        batch_op.drop_index('installed_app_tenant_id_idx')
        batch_op.drop_index('installed_app_app_id_idx')

    op.drop_table('installed_apps')
    with op.batch_alter_table('end_users', schema=None) as batch_op:
        batch_op.drop_index('end_user_tenant_session_id_idx')
        batch_op.drop_index('end_user_session_id_idx')

    op.drop_table('end_users')
    with op.batch_alter_table('embeddings', schema=None) as batch_op:
        batch_op.drop_index('created_at_idx')

    op.drop_table('embeddings')
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.drop_index('document_tenant_idx')
        batch_op.drop_index('document_is_paused_idx')
        batch_op.drop_index('document_dataset_id_idx')

    op.drop_table('documents')
    with op.batch_alter_table('document_segments', schema=None) as batch_op:
        batch_op.drop_index('document_segment_tenant_idx')
        batch_op.drop_index('document_segment_tenant_document_idx')
        batch_op.drop_index('document_segment_tenant_dataset_idx')
        batch_op.drop_index('document_segment_document_id_idx')
        batch_op.drop_index('document_segment_dataset_node_idx')
        batch_op.drop_index('document_segment_dataset_id_idx')

    op.drop_table('document_segments')
    op.drop_table('dify_setups')
    with op.batch_alter_table('datasets', schema=None) as batch_op:
        # batch_op.drop_index('retrieval_model_idx', postgresql_using='gin')
        batch_op.drop_index('dataset_tenant_idx')

    op.drop_table('datasets')
    with op.batch_alter_table('dataset_retriever_resources', schema=None) as batch_op:
        batch_op.drop_index('dataset_retriever_resource_message_id_idx')

    op.drop_table('dataset_retriever_resources')
    with op.batch_alter_table('dataset_queries', schema=None) as batch_op:
        batch_op.drop_index('dataset_query_dataset_id_idx')

    op.drop_table('dataset_queries')
    with op.batch_alter_table('dataset_process_rules', schema=None) as batch_op:
        batch_op.drop_index('dataset_process_rule_dataset_id_idx')

    op.drop_table('dataset_process_rules')
    with op.batch_alter_table('dataset_permissions', schema=None) as batch_op:
        batch_op.drop_index('idx_dataset_permissions_tenant_id')
        batch_op.drop_index('idx_dataset_permissions_dataset_id')
        batch_op.drop_index('idx_dataset_permissions_account_id')

    op.drop_table('dataset_permissions')
    with op.batch_alter_table('dataset_keyword_tables', schema=None) as batch_op:
        batch_op.drop_index('dataset_keyword_table_dataset_id_idx')

    op.drop_table('dataset_keyword_tables')
    with op.batch_alter_table('dataset_collection_bindings', schema=None) as batch_op:
        batch_op.drop_index('provider_model_name_idx')

    op.drop_table('dataset_collection_bindings')
    with op.batch_alter_table('data_source_oauth_bindings', schema=None) as batch_op:
        # batch_op.drop_index('source_info_idx', postgresql_using='gin')
        batch_op.drop_index('source_binding_tenant_id_idx')

    op.drop_table('data_source_oauth_bindings')
    # ### end Alembic commands ###
