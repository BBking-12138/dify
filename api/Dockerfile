# base image
FROM python:3.10-slim-bookworm AS base

WORKDIR /app/api

# Install Poetry
ENV POETRY_VERSION=1.8.3

# if you located in China, you can use aliyun mirror to speed up
# RUN pip install --no-cache-dir poetry==${POETRY_VERSION} -i https://mirrors.aliyun.com/pypi/simple/

RUN pip install --no-cache-dir poetry==${POETRY_VERSION}

# Configure Poetry
ENV POETRY_CACHE_DIR=/tmp/poetry_cache
ENV POETRY_NO_INTERACTION=1
ENV POETRY_VIRTUALENVS_IN_PROJECT=true
ENV POETRY_VIRTUALENVS_CREATE=true
ENV POETRY_REQUESTS_TIMEOUT=15

FROM base AS packages

# if you located in China, you can use aliyun mirror to speed up
# RUN sed -i 's@deb.debian.org@mirrors.aliyun.com@g' /etc/apt/sources.list.d/debian.sources

RUN apt-get update \
    && apt-get install -y --no-install-recommends gcc g++ libc-dev libffi-dev libgmp-dev libmpfr-dev libmpc-dev

# Install Python dependencies
COPY pyproject.toml poetry.lock ./
RUN poetry install --sync --no-cache --no-root

# production stage
FROM base AS production

ENV INNER_API=${INNER_API:-false}
ENV INNER_API_KEY=${INNER_API_KEY:-}
ENV LOG_LEVEL=${LOG_LEVEL:-INFO}
ENV LOG_FILE=${LOG_FILE:-}
ENV DEBUG=${DEBUG:-false}
ENV FLASK_DEBUG=${FLASK_DEBUG:-false}
ENV SECRET_KEY=${SECRET_KEY:-sk-9f73s3ljTXVcMT3Blb3ljTqtsKiGHXVcMT3BlbkFJLK7U}
ENV INIT_PASSWORD=${INIT_PASSWORD:-}
ENV CHECK_UPDATE_URL=${CHECK_UPDATE_URL:-https://updates.dify.ai}
ENV OPENAI_API_BASE=${OPENAI_API_BASE:-https://api.openai.com/v1}
ENV FILES_URL=${FILES_URL:-}
ENV FILES_ACCESS_TIMEOUT=${FILES_ACCESS_TIMEOUT:-300}
ENV APP_MAX_ACTIVE_REQUESTS=${APP_MAX_ACTIVE_REQUESTS:-0}
ENV MIGRATION_ENABLED=${MIGRATION_ENABLED:-true}
ENV DEPLOY_ENV=${DEPLOY_ENV:-PRODUCTION}
ENV DIFY_BIND_ADDRESS=${DIFY_BIND_ADDRESS:-0.0.0.0}
ENV DIFY_PORT=${DIFY_PORT:-5001}
ENV SERVER_WORKER_AMOUNT=${SERVER_WORKER_AMOUNT:-}
ENV SERVER_WORKER_CLASS=${SERVER_WORKER_CLASS:-}
ENV CELERY_WORKER_CLASS=${CELERY_WORKER_CLASS:-}
ENV GUNICORN_TIMEOUT=${GUNICORN_TIMEOUT:-360}
ENV CELERY_WORKER_AMOUNT=${CELERY_WORKER_AMOUNT:-}
ENV CELERY_AUTO_SCALE=${CELERY_AUTO_SCALE:-false}
ENV CELERY_MAX_WORKERS=${CELERY_MAX_WORKERS:-}
ENV CELERY_MIN_WORKERS=${CELERY_MIN_WORKERS:-}
ENV API_TOOL_DEFAULT_CONNECT_TIMEOUT=${API_TOOL_DEFAULT_CONNECT_TIMEOUT:-10}
ENV API_TOOL_DEFAULT_READ_TIMEOUT=${API_TOOL_DEFAULT_READ_TIMEOUT:-60}
ENV DB_USERNAME=${DB_USERNAME:-postgres}
ENV DB_PASSWORD=${DB_PASSWORD:-difyai123456}
ENV DB_HOST=${DB_HOST:-db}
ENV DB_PORT=${DB_PORT:-5432}
ENV DB_DATABASE=${DB_DATABASE:-dify}
ENV SQLALCHEMY_POOL_SIZE=${SQLALCHEMY_POOL_SIZE:-30}
ENV SQLALCHEMY_POOL_RECYCLE=${SQLALCHEMY_POOL_RECYCLE:-3600}
ENV SQLALCHEMY_ECHO=${SQLALCHEMY_ECHO:-false}
ENV REDIS_HOST=${REDIS_HOST:-redis}
ENV REDIS_PORT=${REDIS_PORT:-6379}
ENV REDIS_USERNAME=${REDIS_USERNAME:-}
ENV REDIS_PASSWORD=${REDIS_PASSWORD:-difyai123456}
ENV REDIS_USE_SSL=${REDIS_USE_SSL:-false}
ENV REDIS_DB=0
ENV REDIS_USE_SENTINEL=${REDIS_USE_SENTINEL:-false}
ENV REDIS_SENTINELS=${REDIS_SENTINELS:-}
ENV REDIS_SENTINEL_SERVICE_NAME=${REDIS_SENTINEL_SERVICE_NAME:-}
ENV REDIS_SENTINEL_USERNAME=${REDIS_SENTINEL_USERNAME:-}
ENV REDIS_SENTINEL_PASSWORD=${REDIS_SENTINEL_PASSWORD:-}
ENV REDIS_SENTINEL_SOCKET_TIMEOUT=${REDIS_SENTINEL_SOCKET_TIMEOUT:-0.1}
ENV CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://:difyai123456@redis:6379/1}
ENV BROKER_USE_SSL=${BROKER_USE_SSL:-false}
ENV CELERY_USE_SENTINEL=${CELERY_USE_SENTINEL:-false}
ENV CELERY_SENTINEL_MASTER_NAME=${CELERY_SENTINEL_MASTER_NAME:-}
ENV CELERY_SENTINEL_SOCKET_TIMEOUT=${CELERY_SENTINEL_SOCKET_TIMEOUT:-0.1}
ENV WEB_API_CORS_ALLOW_ORIGINS=${WEB_API_CORS_ALLOW_ORIGINS:-*}
ENV CONSOLE_CORS_ALLOW_ORIGINS=${CONSOLE_CORS_ALLOW_ORIGINS:-*}
ENV STORAGE_TYPE=${STORAGE_TYPE:-local}
ENV STORAGE_LOCAL_PATH=storage
ENV S3_USE_AWS_MANAGED_IAM=${S3_USE_AWS_MANAGED_IAM:-false}
ENV S3_ENDPOINT=${S3_ENDPOINT:-}
ENV S3_BUCKET_NAME=${S3_BUCKET_NAME:-}
ENV S3_ACCESS_KEY=${S3_ACCESS_KEY:-}
ENV S3_SECRET_KEY=${S3_SECRET_KEY:-}
ENV S3_REGION=${S3_REGION:-us-east-1}
ENV AZURE_BLOB_ACCOUNT_NAME=${AZURE_BLOB_ACCOUNT_NAME:-}
ENV AZURE_BLOB_ACCOUNT_KEY=${AZURE_BLOB_ACCOUNT_KEY:-}
ENV AZURE_BLOB_CONTAINER_NAME=${AZURE_BLOB_CONTAINER_NAME:-}
ENV AZURE_BLOB_ACCOUNT_URL=${AZURE_BLOB_ACCOUNT_URL:-}
ENV GOOGLE_STORAGE_BUCKET_NAME=${GOOGLE_STORAGE_BUCKET_NAME:-}
ENV GOOGLE_STORAGE_SERVICE_ACCOUNT_JSON_BASE64=${GOOGLE_STORAGE_SERVICE_ACCOUNT_JSON_BASE64:-}
ENV ALIYUN_OSS_BUCKET_NAME=${ALIYUN_OSS_BUCKET_NAME:-}
ENV ALIYUN_OSS_ACCESS_KEY=${ALIYUN_OSS_ACCESS_KEY:-}
ENV ALIYUN_OSS_SECRET_KEY=${ALIYUN_OSS_SECRET_KEY:-}
ENV ALIYUN_OSS_ENDPOINT=${ALIYUN_OSS_ENDPOINT:-}
ENV ALIYUN_OSS_REGION=${ALIYUN_OSS_REGION:-}
ENV ALIYUN_OSS_AUTH_VERSION=${ALIYUN_OSS_AUTH_VERSION:-v4}
ENV ALIYUN_OSS_PATH=${ALIYUN_OSS_PATH:-}
ENV TENCENT_COS_BUCKET_NAME=${TENCENT_COS_BUCKET_NAME:-}
ENV TENCENT_COS_SECRET_KEY=${TENCENT_COS_SECRET_KEY:-}
ENV TENCENT_COS_SECRET_ID=${TENCENT_COS_SECRET_ID:-}
ENV TENCENT_COS_REGION=${TENCENT_COS_REGION:-}
ENV TENCENT_COS_SCHEME=${TENCENT_COS_SCHEME:-}
ENV HUAWEI_OBS_BUCKET_NAME=${HUAWEI_OBS_BUCKET_NAME:-}
ENV HUAWEI_OBS_SECRET_KEY=${HUAWEI_OBS_SECRET_KEY:-}
ENV HUAWEI_OBS_ACCESS_KEY=${HUAWEI_OBS_ACCESS_KEY:-}
ENV HUAWEI_OBS_SERVER=${HUAWEI_OBS_SERVER:-}
ENV OCI_ENDPOINT=${OCI_ENDPOINT:-}
ENV OCI_BUCKET_NAME=${OCI_BUCKET_NAME:-}
ENV OCI_ACCESS_KEY=${OCI_ACCESS_KEY:-}
ENV OCI_SECRET_KEY=${OCI_SECRET_KEY:-}
ENV OCI_REGION=${OCI_REGION:-}
ENV VOLCENGINE_TOS_BUCKET_NAME=${VOLCENGINE_TOS_BUCKET_NAME:-}
ENV VOLCENGINE_TOS_SECRET_KEY=${VOLCENGINE_TOS_SECRET_KEY:-}
ENV VOLCENGINE_TOS_ACCESS_KEY=${VOLCENGINE_TOS_ACCESS_KEY:-}
ENV VOLCENGINE_TOS_ENDPOINT=${VOLCENGINE_TOS_ENDPOINT:-}
ENV VOLCENGINE_TOS_REGION=${VOLCENGINE_TOS_REGION:-}
ENV VECTOR_STORE=${VECTOR_STORE:-weaviate}
ENV WEAVIATE_ENDPOINT=${WEAVIATE_ENDPOINT:-http://weaviate:8080}
ENV WEAVIATE_API_KEY=${WEAVIATE_API_KEY:-WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih}
ENV QDRANT_URL=${QDRANT_URL:-http://qdrant:6333}
ENV QDRANT_API_KEY=${QDRANT_API_KEY:-difyai123456}
ENV QDRANT_CLIENT_TIMEOUT=${QDRANT_CLIENT_TIMEOUT:-20}
ENV QDRANT_GRPC_ENABLED=${QDRANT_GRPC_ENABLED:-false}
ENV QDRANT_GRPC_PORT=${QDRANT_GRPC_PORT:-6334}
ENV MILVUS_URI=${MILVUS_URI:-http://127.0.0.1:19530}
ENV MILVUS_TOKEN=${MILVUS_TOKEN:-}
ENV MILVUS_USER=${MILVUS_USER:-root}
ENV MILVUS_PASSWORD=${MILVUS_PASSWORD:-Milvus}
ENV MYSCALE_HOST=${MYSCALE_HOST:-myscale}
ENV MYSCALE_PORT=${MYSCALE_PORT:-8123}
ENV MYSCALE_USER=${MYSCALE_USER:-default}
ENV MYSCALE_PASSWORD=${MYSCALE_PASSWORD:-}
ENV MYSCALE_DATABASE=${MYSCALE_DATABASE:-dify}
ENV MYSCALE_FTS_PARAMS=${MYSCALE_FTS_PARAMS:-}
ENV RELYT_HOST=${RELYT_HOST:-db}
ENV RELYT_PORT=${RELYT_PORT:-5432}
ENV RELYT_USER=${RELYT_USER:-postgres}
ENV RELYT_PASSWORD=${RELYT_PASSWORD:-difyai123456}
ENV RELYT_DATABASE=${RELYT_DATABASE:-postgres}
ENV PGVECTOR_HOST=${PGVECTOR_HOST:-pgvector}
ENV PGVECTOR_PORT=${PGVECTOR_PORT:-5432}
ENV PGVECTOR_USER=${PGVECTOR_USER:-postgres}
ENV PGVECTOR_PASSWORD=${PGVECTOR_PASSWORD:-difyai123456}
ENV PGVECTOR_DATABASE=${PGVECTOR_DATABASE:-dify}
ENV TIDB_VECTOR_HOST=${TIDB_VECTOR_HOST:-tidb}
ENV TIDB_VECTOR_PORT=${TIDB_VECTOR_PORT:-4000}
ENV TIDB_VECTOR_USER=${TIDB_VECTOR_USER:-}
ENV TIDB_VECTOR_PASSWORD=${TIDB_VECTOR_PASSWORD:-}
ENV TIDB_VECTOR_DATABASE=${TIDB_VECTOR_DATABASE:-dify}
ENV ORACLE_HOST=${ORACLE_HOST:-oracle}
ENV ORACLE_PORT=${ORACLE_PORT:-1521}
ENV ORACLE_USER=${ORACLE_USER:-dify}
ENV ORACLE_PASSWORD=${ORACLE_PASSWORD:-dify}
ENV ORACLE_DATABASE=${ORACLE_DATABASE:-FREEPDB1}
ENV CHROMA_HOST=${CHROMA_HOST:-127.0.0.1}
ENV CHROMA_PORT=${CHROMA_PORT:-8000}
ENV CHROMA_TENANT=${CHROMA_TENANT:-default_tenant}
ENV CHROMA_DATABASE=${CHROMA_DATABASE:-default_database}
ENV CHROMA_AUTH_PROVIDER=${CHROMA_AUTH_PROVIDER:-chromadb.auth.token_authn.TokenAuthClientProvider}
ENV CHROMA_AUTH_CREDENTIALS=${CHROMA_AUTH_CREDENTIALS:-}
ENV ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST:-0.0.0.0}
ENV ELASTICSEARCH_PORT=${ELASTICSEARCH_PORT:-9200}
ENV ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elastic}
ENV ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-elastic}
ENV KIBANA_PORT=${KIBANA_PORT:-5601}
ENV ANALYTICDB_KEY_ID=${ANALYTICDB_KEY_ID:-}
ENV ANALYTICDB_KEY_SECRET=${ANALYTICDB_KEY_SECRET:-}
ENV ANALYTICDB_REGION_ID=${ANALYTICDB_REGION_ID:-}
ENV ANALYTICDB_INSTANCE_ID=${ANALYTICDB_INSTANCE_ID:-}
ENV ANALYTICDB_ACCOUNT=${ANALYTICDB_ACCOUNT:-}
ENV ANALYTICDB_PASSWORD=${ANALYTICDB_PASSWORD:-}
ENV ANALYTICDB_NAMESPACE=${ANALYTICDB_NAMESPACE:-dify}
ENV ANALYTICDB_NAMESPACE_PASSWORD=${ANALYTICDB_NAMESPACE_PASSWORD:-}
ENV OPENSEARCH_HOST=${OPENSEARCH_HOST:-opensearch}
ENV OPENSEARCH_PORT=${OPENSEARCH_PORT:-9200}
ENV OPENSEARCH_USER=${OPENSEARCH_USER:-admin}
ENV OPENSEARCH_PASSWORD=${OPENSEARCH_PASSWORD:-admin}
ENV OPENSEARCH_SECURE=${OPENSEARCH_SECURE:-true}
ENV TENCENT_VECTOR_DB_URL=${TENCENT_VECTOR_DB_URL:-http://127.0.0.1}
ENV TENCENT_VECTOR_DB_API_KEY=${TENCENT_VECTOR_DB_API_KEY:-dify}
ENV TENCENT_VECTOR_DB_TIMEOUT=${TENCENT_VECTOR_DB_TIMEOUT:-30}
ENV TENCENT_VECTOR_DB_USERNAME=${TENCENT_VECTOR_DB_USERNAME:-dify}
ENV TENCENT_VECTOR_DB_DATABASE=${TENCENT_VECTOR_DB_DATABASE:-dify}
ENV TENCENT_VECTOR_DB_SHARD=${TENCENT_VECTOR_DB_SHARD:-1}
ENV TENCENT_VECTOR_DB_REPLICAS=${TENCENT_VECTOR_DB_REPLICAS:-2}
ENV UPLOAD_FILE_SIZE_LIMIT=${UPLOAD_FILE_SIZE_LIMIT:-15}
ENV UPLOAD_FILE_BATCH_LIMIT=${UPLOAD_FILE_BATCH_LIMIT:-5}
ENV FLASK_APP=${FLASK_APP:-app.py}
ENV EDITION=${EDITION:-SELF_HOSTED}
ENV DEPLOY_ENV=${DEPLOY_ENV:-PRODUCTION}
ENV CONSOLE_API_URL=${CONSOLE_API_URL:-http://127.0.0.1:5001}
ENV CONSOLE_WEB_URL=${CONSOLE_WEB_URL:-http://127.0.0.1:3000}
ENV SERVICE_API_URL=${SERVICE_API_URL:-http://127.0.0.1:5001}
ENV APP_WEB_URL=${CONSOLE_WEB_URL:-http://127.0.0.1:3000}
ENV MODE=${MODE:-api}

EXPOSE 5001

# set timezone
ENV TZ=UTC

WORKDIR /app/api

RUN apt-get update \
    && apt-get install -y --no-install-recommends curl nodejs libgmp-dev libmpfr-dev libmpc-dev \
    # if you located in China, you can use aliyun mirror to speed up
    # && echo "deb http://mirrors.aliyun.com/debian testing main" > /etc/apt/sources.list \
    && echo "deb http://deb.debian.org/debian testing main" > /etc/apt/sources.list \
    && apt-get update \
    # For Security
    && apt-get install -y --no-install-recommends zlib1g=1:1.3.dfsg+really1.3.1-1 expat=2.6.3-1 libldap-2.5-0=2.5.18+dfsg-3 perl=5.38.2-5 libsqlite3-0=3.46.0-1 vim curl\
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

# Copy Python environment and packages
ENV VIRTUAL_ENV=/app/api/.venv
COPY --from=packages ${VIRTUAL_ENV} ${VIRTUAL_ENV}
ENV PATH="${VIRTUAL_ENV}/bin:${PATH}"

# Download nltk data
RUN python -c "import nltk; nltk.download('punkt'); nltk.download('averaged_perceptron_tagger')"

# Copy source code
COPY . /app/api/

# Copy entrypoint
COPY docker/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh


ARG COMMIT_SHA
ENV COMMIT_SHA=${COMMIT_SHA}

ENTRYPOINT ["/bin/bash", "/entrypoint.sh"]
